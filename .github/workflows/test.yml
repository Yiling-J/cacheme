---
name: Tests

on:
  push:
    branches:
      - master
      - "[0-9].[0-9]"
      - "v2"
  pull_request:
    branches: ["master"]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: username
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test
        options: >-
          --health-cmd "mongosh --eval 'db.version()'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          version: 1.3
      - name: Setup Poetry
        run: "poetry config virtualenvs.in-project true"
      - name: Cache Deps
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: python-${{ matrix.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: "Install Dependencies"
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: "poetry install --no-interaction --no-root"
      - name: "Run Lint"
        run: "poetry run mypy --ignore-missing-imports ."
      - name: "Run Tests"
        env:
          CI: "TRUE"
        run: "poetry run pytest --benchmark-skip"
      - name: "Run Benchmarks"
        run: "poetry run pytest --benchmark-only --benchmark-json output.json"
      - name: "Publish Benchmark Result"
        if: ${{ matrix.python-version == '3.11' && github.ref == 'refs/heads/master'}}
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Cacheme Benchmark with pytest-benchmark
          tool: 'pytest'
          output-file-path: output.json
          github-token: ${{ secrets.BENCH_TOKEN }}
          auto-push: true
          gh-repository: 'github.com/Yiling-J/cacheme-benchmark'
